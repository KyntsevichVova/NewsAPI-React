{"version":3,"sources":["Model.js","App.js","serviceWorker.js","index.js"],"names":["key","Model","this","loaded","pointer","prototype","loadSources","Object","asyncToGenerator","regenerator_default","a","mark","_callee","url","req","wrap","_context","prev","next","concat","Request","abrupt","fetch","then","json","stop","loadRequest","_callee2","request","sources","endpoint","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","_ref5","_ref4","_key","value","res","_args2","arguments","_context2","length","undefined","Set","size","toConsumableArray","values","join","country","entries","Symbol","iterator","done","slicedToArray","encodeURI","t0","return","finish","sent","articles","nextBatch","batch","slice","hasMore","InputButton","react_default","createElement","className","onClick","props","handleInputClick","React","Component","InputField","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleKeyUp","bind","assertThisInitialized","type","onChange","handleInputChange","onKeyUp","e","preventDefault","keyCode","handleEnterPress","RequestInput","App_InputField","handleQueryChange","handleRequestExecution","App_InputButton","SourceButton","toggled","id","name","SourceFilter","_this2","handleClick","_this3","map","source","App_SourceButton","has","target","classList","contains","toggle","Article","article","info","publishedAt","Date","toLocaleString","hour12","day","month","year","hour","minute","author","style","backgroundImage","urlToImage","href","title","description","News","index","App_Article","FailMessage","visible","message","MoreButton","moreButtonClick","Main","_this4","state","query","MAX_DISPLAYED","_this5","model","setState","App_RequestInput","App_SourceFilter","App_News","App_FailMessage","App_MoreButton","t","delete","add","_this6","q","Footer","App","App_Main","App_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e8d5af20.chunk.js","sourcesContent":["const key = \"158b90ae4f0d4b918241c1c3e69335ed\";\r\nconst BATCH_SIZE = 5;\r\n\r\nexport default function Model() {\r\n    this.loaded = [];\r\n    this.pointer = 0;\r\n};\r\n\r\nModel.prototype.loadSources = async function() {\r\n    const url = `https://newsapi.org/v2/sources?apiKey=${key}`;\r\n    const req = new Request(url);\r\n    return fetch(req).then(json => json.json());\r\n}\r\n\r\nModel.prototype.loadRequest = async function(request = {}, sources = new Set()) {\r\n    this.pointer = 0;\r\n    const endpoint = request.endpoint || (sources.size ? \"everything\" : \"top-headlines\");\r\n    request.endpoint = undefined;\r\n    let url = `https://newsapi.org/v2/${endpoint}?`;\r\n    request.sources = [ ...sources.values() ].join(',');\r\n    if (!request.sources) {\r\n        request.country = \"us\";\r\n    } else {\r\n        request.country = undefined;\r\n    }\r\n    request = Object.entries(request);\r\n    for (const [key, value] of request) {\r\n        if (value) {\r\n            url += `${key}=${encodeURI(value)}&`;\r\n        }\r\n    }\r\n    url += `pageSize=40&apiKey=${key}`;\r\n    const req = new Request(url);\r\n    let res = (await (await fetch(req)).json()).articles;\r\n    if (res && res.length) {\r\n        this.loaded = res;\r\n    } else {\r\n        this.loaded = [];\r\n    }\r\n}\r\n\r\nModel.prototype.nextBatch = function() {\r\n    let batch = this.loaded.slice(this.pointer, this.pointer + BATCH_SIZE);\r\n    this.pointer += batch.length;\r\n    return batch;\r\n}\r\n\r\nModel.prototype.hasMore = function() {\r\n    return this.pointer < this.loaded.length;\r\n}","import React from 'react';\nimport Model from './Model.js';\nimport './index.css';\n\nclass InputButton extends React.Component {\n    render() {\n        return (\n            <button \n                className=\"inputButton\"\n                onClick={this.props.handleInputClick}>\n                Search\n            </button>\n        );\n    }\n}\n\nclass InputField extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleKeyUp = this.handleKeyUp.bind(this);\n    }\n\n    render() {\n        return (\n            <input \n                type=\"text\" \n                className=\"inputField\"\n                onChange={this.props.handleInputChange}\n                onKeyUp={this.handleKeyUp}\n            />\n        );\n    }\n\n    handleKeyUp(e) {\n        e.preventDefault();\n        if (e.keyCode === 13) \n            this.props.handleEnterPress();\n    }\n}\n\nclass RequestInput extends React.Component {\n    render() {\n        return (\n            <div className=\"requestWrapper\">\n                <div className=\"requestInput\">\n                    <InputField \n                        handleInputChange={this.props.handleQueryChange}\n                        handleEnterPress={this.props.handleRequestExecution}\n                    />\n                    <InputButton \n                        handleInputClick={this.props.handleRequestExecution}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nclass SourceButton extends React.Component {\n    render() {\n        return (\n            <button \n                className={\"sourceButton\" + (this.props.toggled ? \" activeFilter\" : \"\")}\n                id={this.props.id}>\n                {this.props.name}\n            </button>\n        );\n    }\n}\n\nclass SourceFilter extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClick = this.handleClick.bind(this);\n    }\n\n    render() {\n        return (    \n            <div className=\"sourceFilterWrapper\">\n                <nav className=\"sourceFilter\" onClick={this.handleClick}>\n                    {\n                        this.props.sources.map((source) => \n                            <SourceButton \n                                key={source.id}\n                                id={source.id} \n                                name={source.name}\n                                toggled={this.props.toggled.has(source.id)}\n                            />\n                        )\n                    }\n                </nav>\n            </div>\n        );\n    }\n\n    handleClick(e) {\n        if (e.target.classList.contains(\"sourceButton\")) {\n            this.props.toggle(e.target.id);\n            this.props.handleInputClick();\n        }\n    }\n}\n\nclass Article extends React.Component {\n    render() {\n        let article = this.props.article;\n        let info = article.source.name;\n        if (article.publishedAt) {\n            info += ', ' + new Date(article.publishedAt).toLocaleString(\"en-US\", {\n                hour12: false, day: \"2-digit\", month: \"long\", year: \"numeric\", hour: \"2-digit\", minute: \"2-digit\"\n            });\n        }\n        if (article.author) {\n            info += ', Author: ' + article.author;\n        }\n        return (\n            <div className=\"contentElementWrapper\">\n                <div className=\"contentElement\">\n                    <div \n                        className=\"contentElementImg\"\n                        style={{backgroundImage: `url(\"${article.urlToImage}\")`}}>\n                    </div>\n                    <article className=\"article\">\n                        <a \n                            className=\"articleLink\"\n                            href={article.url}>\n                            <header className=\"articleHeader\">\n                                <h2 className=\"articleTitle\">\n                                    {article.title}\n                                </h2>\n                                <span className=\"articleInfo\">\n                                    {info}\n                                </span>\n                            </header>\n                            <section className=\"articleBody\">\n                                {article.description}\n                            </section>\n                        </a>\n                    </article>\n                </div>\n            </div>\n        );\n    }\n}\n\nclass News extends React.Component {\n    render() {\n        return (\n            <div className=\"contentWrapper\">\n                {\n                    this.props.loaded.map((article, index) => \n                        <Article \n                            key={index}\n                            article={article}\n                        />\n                    )\n                }\n            </div>\n        );\n    }\n}\n\nclass FailMessage extends React.Component {\n    render() {\n        if (this.props.visible) {\n            return (\n                <div className=\"failMessageWrapper\">\n                    <h1 className=\"failMessage\">\n                        {this.props.message}\n                    </h1>\n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n}\n\nclass MoreButton extends React.Component {\n    render() {\n        if (this.props.visible) {\n            return (\n                <div className=\"moreButtonWrapper\">\n                    <button \n                        className=\"moreButton\"\n                        onClick={this.props.moreButtonClick}>\n                        Show more\n                    </button>   \n                </div>\n            );\n        } else {\n            return null;\n        }\n    }\n}\n\nclass Main extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sources: [],\n            loaded: [],\n            toggled: new Set(),\n            hasMore: false,\n            query: \"\"\n        }\n        this.MAX_DISPLAYED = 40;\n\n        this.toggle = this.toggle.bind(this);\n        this.handleQueryChange = this.handleQueryChange.bind(this);\n        this.handleRequestExecution = this.handleRequestExecution.bind(this);\n        this.moreButtonClick = this.moreButtonClick.bind(this);\n    }\n\n    componentDidMount() {\n        this.model = new Model();\n        this.model.loadSources().then(value => {\n            this.setState({\n                sources: value.sources\n            });\n        });\n        this.model.loadRequest().then(() => {\n            this.setState({\n                loaded: this.model.nextBatch(),\n                hasMore: this.model.hasMore()\n            });\n        });\n    }\n\n    render() {\n        return (\n            <main className=\"sticky\">\n                <RequestInput \n                    loadRequest={this.loadRequest}\n                    handleQueryChange={this.handleQueryChange}\n                    handleRequestExecution={this.handleRequestExecution}\n                />\n                <SourceFilter \n                    sources={this.state.sources} \n                    toggle={this.toggle}\n                    toggled={this.state.toggled}\n                    handleInputClick={this.handleRequestExecution}\n                />\n                <News\n                    loaded={this.state.loaded} \n                />\n                <FailMessage\n                    visible={!this.state.loaded.length} \n                    message=\"There are no articles matching your request\"\n                />\n                <MoreButton \n                    visible={this.state.hasMore && this.state.loaded.length < this.MAX_DISPLAYED}\n                    moreButtonClick={this.moreButtonClick}\n                />\n            </main>\n        );\n    }\n\n    toggle(id) {\n        let t = this.state.toggled;\n        if (t.has(id)) {\n            t.delete(id); \n        } else {\n            t.add(id);\n        }\n        this.setState({\n            toggled: t\n        });\n    }\n\n    handleQueryChange(query) {\n        this.setState({\n            query: query.target.value\n        });\n    }\n\n    handleRequestExecution() {\n        this.model.loadRequest({q: this.state.query}, this.state.toggled).then(() => {\n            this.setState({\n                loaded: this.model.nextBatch(),\n                hasMore: this.model.hasMore()\n            });\n        });\n    }\n\n    moreButtonClick() {\n        this.setState({\n            loaded: this.state.loaded.concat(this.model.nextBatch()),\n            hasMore: this.model.hasMore()\n        });\n    }\n}\n\nclass Footer extends React.Component {\n    render() {\n        return (\n            <footer className=\"sticky\">\n                <p className=\"poweredBy\">\n                    Powered by \n                    <a href=\"https://newsapi.org\">\n                        NewsAPI\n                    </a>\n                </p>\n            </footer>\n        );\n    }\n}\n\nclass App extends React.Component {\n    render() {\n        return (\n            <div className=\"sticky\">\n                <Main />\n                <Footer />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}